extends ui_layout_no
  
block content

  //-Change this URI to a CDN you are using for Photos
  -var cdn = "";
  .computer.only.tablet.only.four.wide.column 
    .ui.card
    
      //.image
        if user.profile.picture
          img(src='/user_post/'+user.profile.picture)
        else
          img(src=user.gravatar(60))
    
      .content
        a.header(href='/me')= user.profile.name || user.username || user.id
        .meta="@"+user.username
        .description=user.profile.bio
        .description
          if user.profile.location
            i.marker.icon
            span=user.profile.location
      .one.ui.bottom.attached.icon.buttons
          button.ui.editprofile.button(data-tooltip='Update Your Profile', data-position='bottom left')
            i.write.icon

  #loading.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column
    img.ui.centered.small.image(src='/public/heart.svg')
  #content.eight.wide.computer.ten.wide.tablet.sixteen.wide.mobile.column(style='display: none;')
    //-.ui.active.dimmer.feed
      .ui.large.text.loader Loading
    //- Input for creating new post at top of feed
    #newpost.ui.fluid.left.labeled.right.icon.input
      .ui.label
        if user.profile.picture
          img.ui.avatar.image(src='/user_post/'+user.profile.picture)
        else
          img.ui.avatar.image(src=user.gravatar(60))
      input(type='text', placeholder='Make a post')
      i.big.photo.link.icon


    //
     * code to get the value from the dropdown menu 
     * goals: using the value variable from 
     * selectedValue somehow control the timeline 
     */
    
    if user.isAdmin
        p
          | Posts from which day: 
        select#PostsFrom(onchange = 'getSelectedValue();')
          option(value = '1') 1 day ago 
          option(value = '2') 2 days ago
          option(value = '3') 3 days ago
        script(type = 'text/javascript').
          function getSelectedValue(){
            var selectedValue = document.getElementById("PostsFrom").value;
            console.log(selectedValue)
          }         
    

    each val in script
      //- create a card for each post in val (if by user make the card a little different)
      //- if val.relativeTime - then post came from user_post (so user post, user reply to actor reply to user post)
      if val.relativeTime
        -var u_class;
        -if (val.actorAuthor) {u_class = "actorReply"}
        -else if (val.reply) {u_class = "userReply"}
        -else {u_class = "userPost"}
        .ui.fluid.card(u_postID=val.id, type=u_class, postID=val.postID)
          
          //- This is a User made post
          .content
            .right.floated.time.meta= (user.createdAt.getTime() + val.relativeTime)
            |  
            a.ui.avatar.image(href='/me')
              if user.profile.picture
                img(src='/user_post/'+user.profile.picture)
              else
                img(src=user.gravatar(60))
            a(href='/me')
              span=user.profile.name || user.username || user.id
          .image
            img(src='/user_post/'+val.picture)
          .content
            .description=val.body
          .two.ui.bottom.attached.icon.buttons
            if val.liked
              .ui.red.like.button
                i.heart.icon
                |  Like
            else
              .ui.like.button
                i.heart.icon
                |  Like
         

      //-THIS is for posts by Actors, not the USER
      else
        .ui.fluid.card.dim(postID=val.id, state=val.state || 'unread', type='actor', actor_un = val.actor.username, actor_name = val.actor.profile.name, actor_pic = val.actor.profile.picture)
          //- dimmer DIV for flagging
          .ui.dimmer.flag
                .content
                  .center
                    h2.ui.inverted.icon.header
                      i.red.flag.icon
                      |  You&apos;ve flagged this!
                      h3.ui.inverted.header
                        span="The admins will review this post further. We are sorry you had this experience."
          //- Normal Base Post
          .content
            .right.floated.time.meta= (user.createdAt.getTime() + val.time)
            |  
            //-a(href='/user/'+val.actor.username)
              img.ui.avatar.image(src=cdn+'/profile_pictures/'+val.actor.profile.picture)
              span=val.actor.profile.name
            if user.isAdmin
              .actor.ui.selection.dropdown  
                input(type='hidden', name='user')
                i.dropdown.icon
                .default.text
                  a(href='/user/'+val.actor.username)
                  img.ui.avatar.image.lazyload(data-src=cdn+"/profile_pictures/"+val.actor.profile.picture)
                  span=val.actor.profile.name
                .menu
                  each person in script
                    .item(data-value='1')
                        img.ui.avatar.image.lazyload(data-src=cdn+"/profile_pictures/"+person.actor.profile.picture)
                        span=person.actor.profile.name
            else
              a(href='/user/'+val.actor.username)
                span=val.actor.profile.name
            //    img.ui.avatar.image.lazyload(data-src=cdn+"/profile_pictures/"+val.actor.profile.picture)
                
                //-.item(data-value='0')
                  a(href='/user/NoahM1121')
                    img.ui.avatar.image(src='/profile_pictures/image-7.png')
                    span='Another User'
          //-div(style="position: relative; z-index: 1;")
            img(src="image.png" style="position: absolute; z-index: 2;")
            span#overlay_text(style="position: relative; top: -10px; z-index: 3;") OVERLAY
          .img.post
            //-img.post(src="/"+val.picture)
            //img(src='/public/picture.svg', data-src="/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
            img.lazyload.post(data-src=cdn+"/post_pictures/"+val.picture, style="max-width:100%;width:100%;")
          .content
            .description=val.body
          .four.ui.bottom.attached.icon.buttons
            .ui.adminSave.button(tabindex='0', style='display: none;')
              i.edit.icon
              | Save
            .ui.flag.button(tabindex='0')
              i.flag.icon
              |  Flag
            if val.like
              .ui.labeled.button(tabindex='0')
                .ui.red.like.button
                  i.heart.icon
                  |  Like
            else
              .ui.labeled.button(tabindex='0')
                .ui.like.button
                  i.heart.icon
                  |  Like
          
  

    .ui.fluid.card
      .content
        .description
        |  You are all caught up with posts.
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    br
    .ui.tiny.post.modal()
      i.close.icon
      .header Add a New Post
      .content
        form#postform.ui.feed.form(action='/post/new', method='POST', enctype='multipart/form-data')
          input(type='hidden', name='_csrf', value=_csrf)
          .field
            textarea(rows='2', placeholder='Share your meal', name='body')
          .field.image-upload
            label(for='picinput')
              .image.content
                img#imgInp.ui.fluid.image(src='/public/photo-camera.svg')
            //-input#picinput(type='file', accept='image/*', capture='camera', name='picinput')
            input#picinput(type='file', accept='image/*', name='picinput')
          .ui.error.message
      .actions
        input.ui.green.button(type='submit', name="foo", value='Submit', form='postform')

    .ui.tiny.update.modal()
      i.close.icon
      .header Change Post Photo
      .content
        form#updateform.ui.update.form(action='/update_post_photo', method='POST', enctype='multipart/form-data')
          input(type='hidden', name='_csrf', value=_csrf)
          .field.image-upload
            label(for='newpic')
              .image.content
                img#imgInpAdmin.ui.fluid.image(src='/public/photo-camera.svg')
            //-input#picinput(type='file', accept='image/*', capture='camera', name='picinput')
            input#newpic(type='file', accept='image/*', name='newpic')
          .ui.error.message
      .actions
        input.ui.green.button(type='submit', name="new", value='Submit', form='updateform')
